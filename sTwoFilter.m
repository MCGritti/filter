function varargout = sTwoFilter(U, y0, sigma, varargin)

  N = size(U, 1);
  
  if isempty(y0)
    initindex = 2;
  else
    if isrow(y0)
      y0 = y0';
    end
    initindex = length(y0) + 1;
  end
  partialindex = 80;
  
  Ys = zeros(N, 1);
  Y  = zeros(N, 1);
  
  if length(sigma) ~= length(Ys)
    E  = sigma*randn(N, 1);
  else
	E  = sigma;
  end
	
  if nargin > 3
	osa = true;
	Ys  = varargin{1};
	Y   = Ys;
  else
	osa = false;
	Ys(1:length(y0)) = y0;
	Y = Ys;
  end
  
  
  theta    = [+0.016885306899327532
				+0.027528656492141920
				+0.034707390657142144
				+0.038172629000743773
				+0.041463093891253924
				+0.040707779484476375
				+0.041165603531911968
				+0.041669990908442145
				+0.042760434148325137
				+0.041628570974783521
				+0.040435263006176905
				+0.038729323743093673
				+0.038363387014988329
				+0.038011785316657179
				+0.038404855490492974
				+0.038277481423500771
				+0.039472435583206462
				+0.039198247506971345
				+0.037882080487399855
				+0.035438395460927183
				+0.032062143194786105
				+0.028368118793172553
				+0.024944499440928199
				+0.020745318081851802
				+0.015792726439395496
				+0.010764876851114992
				+0.006374138226163971
				+0.004884118616679841
				+0.005403121292938565
				+0.004504360853082099
				+0.004096267777947592
				+0.004879475801192983
				+0.004143638410594282
				+0.003591411079995973
				+0.005284448884898040
				+0.006746935771945477
				+0.006665015478338733
				+0.005565234241895638
				+0.005756028230233282
				+0.005811626703300813
				+0.005988350432699290
				+0.005645812929732529
				+0.003675927387738506
				+0.001524786663377372
				-0.000806014281626287
				-0.001426839463503962
				-0.002497476428473269
				-0.002057476537649357
				-0.003400277424611694
				-0.004361743827318796
				-0.004030320056575162
				-0.003458703853666222
				-0.003291012384770089
				-0.004267836698688152
				-0.004343600754776192
				-0.003123725632069778
				-0.003531552061731652
				-0.004522753998168043
				-0.005036700063139412
				-0.005146901799150986
				-0.006024333985836166
				-0.006149461066032142
				-0.004889863111633753
				-0.003133466711007250
				-0.002788846586424206
				-0.001854214938523042
				-0.000599362405938729
				+0.000949649766608698
				+0.002722842834209612
				+0.002863955441451750
				+0.003367911355734316
				+0.002525262028654628
				+0.001629788611164777
				+0.001607087628134641
				+0.000772228372707563
				-0.000238813888154542
				-0.001991859877459037
				-0.002171467488167369
				-0.001903930072962123
				-0.001053643496997341
				];
  termlist = {'U(k-1,1)'; ...
				'U(k-2,1)'; ...
				'U(k-3,1)'; ...
				'U(k-4,1)'; ...
				'U(k-5,1)'; ...
				'U(k-6,1)'; ...
				'U(k-7,1)'; ...
				'U(k-8,1)'; ...
				'U(k-9,1)'; ...
				'U(k-10,1)'; ...
				'U(k-11,1)'; ...
				'U(k-12,1)'; ...
				'U(k-13,1)'; ...
				'U(k-14,1)'; ...
				'U(k-15,1)'; ...
				'U(k-16,1)'; ...
				'U(k-17,1)'; ...
				'U(k-18,1)'; ...
				'U(k-19,1)'; ...
				'U(k-20,1)'; ...
				'U(k-21,1)'; ...
				'U(k-22,1)'; ...
				'U(k-23,1)'; ...
				'U(k-24,1)'; ...
				'U(k-25,1)'; ...
				'U(k-26,1)'; ...
				'U(k-27,1)'; ...
				'U(k-28,1)'; ...
				'U(k-29,1)'; ...
				'U(k-30,1)'; ...
				'U(k-31,1)'; ...
				'U(k-32,1)'; ...
				'U(k-33,1)'; ...
				'U(k-34,1)'; ...
				'U(k-35,1)'; ...
				'U(k-36,1)'; ...
				'U(k-37,1)'; ...
				'U(k-38,1)'; ...
				'U(k-39,1)'; ...
				'U(k-40,1)'; ...
				'U(k-41,1)'; ...
				'U(k-42,1)'; ...
				'U(k-43,1)'; ...
				'U(k-44,1)'; ...
				'U(k-45,1)'; ...
				'U(k-46,1)'; ...
				'U(k-47,1)'; ...
				'U(k-48,1)'; ...
				'U(k-49,1)'; ...
				'U(k-50,1)'; ...
				'U(k-51,1)'; ...
				'U(k-52,1)'; ...
				'U(k-53,1)'; ...
				'U(k-54,1)'; ...
				'U(k-55,1)'; ...
				'U(k-56,1)'; ...
				'U(k-57,1)'; ...
				'U(k-58,1)'; ...
				'U(k-59,1)'; ...
				'U(k-60,1)'; ...
				'U(k-61,1)'; ...
				'U(k-62,1)'; ...
				'U(k-63,1)'; ...
				'U(k-64,1)'; ...
				'U(k-65,1)'; ...
				'U(k-66,1)'; ...
				'U(k-67,1)'; ...
				'U(k-68,1)'; ...
				'U(k-69,1)'; ...
				'U(k-70,1)'; ...
				'U(k-71,1)'; ...
				'U(k-72,1)'; ...
				'U(k-73,1)'; ...
				'U(k-74,1)'; ...
				'U(k-75,1)'; ...
				'U(k-76,1)'; ...
				'U(k-77,1)'; ...
				'U(k-78,1)'; ...
				'U(k-79,1)'; ...
				'U(k-80,1)'; ...
				};
  
  Us = zeros(length(Ys), length(theta));
  M = length(termlist);

  for k = initindex:partialindex
    for m = 1:M
      try
        eval(sprintf('term = %s;', termlist{m}));
      catch
        term = 0;
      end
	  Us(k,:) = term;
	  Y(k) = Y(k) + theta(m)*term;
	  if ~osa
		Ys(k) = Y(k);
	  end
    end    
  end
  
  nprint = 0;
  for k = partialindex+1:N
    if k == partialindex + 1 || ~mod(k, 50) || k == N
      while nprint > 0
        fprintf('\b');
        nprint = nprint - 1;
      end
      nprint = fprintf('Simulation %3d%% completed\n', round(100*k/N));
    end
	Us(k,:) = [U(k-1,1) U(k-2,1) U(k-3,1) U(k-4,1) ...
				U(k-5,1) U(k-6,1) U(k-7,1) U(k-8,1) ...
				U(k-9,1) U(k-10,1) U(k-11,1) U(k-12,1) ...
				U(k-13,1) U(k-14,1) U(k-15,1) U(k-16,1) ...
				U(k-17,1) U(k-18,1) U(k-19,1) U(k-20,1) ...
				U(k-21,1) U(k-22,1) U(k-23,1) U(k-24,1) ...
				U(k-25,1) U(k-26,1) U(k-27,1) U(k-28,1) ...
				U(k-29,1) U(k-30,1) U(k-31,1) U(k-32,1) ...
				U(k-33,1) U(k-34,1) U(k-35,1) U(k-36,1) ...
				U(k-37,1) U(k-38,1) U(k-39,1) U(k-40,1) ...
				U(k-41,1) U(k-42,1) U(k-43,1) U(k-44,1) ...
				U(k-45,1) U(k-46,1) U(k-47,1) U(k-48,1) ...
				U(k-49,1) U(k-50,1) U(k-51,1) U(k-52,1) ...
				U(k-53,1) U(k-54,1) U(k-55,1) U(k-56,1) ...
				U(k-57,1) U(k-58,1) U(k-59,1) U(k-60,1) ...
				U(k-61,1) U(k-62,1) U(k-63,1) U(k-64,1) ...
				U(k-65,1) U(k-66,1) U(k-67,1) U(k-68,1) ...
				U(k-69,1) U(k-70,1) U(k-71,1) U(k-72,1) ...
				U(k-73,1) U(k-74,1) U(k-75,1) U(k-76,1) ...
				U(k-77,1) U(k-78,1) U(k-79,1) U(k-80,1) ...
				];
    Y(k) = Us(k,:)*theta;
	if ~osa
	  Y(k) = Y(k) + E(k);
	  Ys(k) = Y(k);
	end
  end
  
  if nargout > 1
	varargout = {Y, Us, theta};
  else
	varargout = {Y};
  end
end
